==3111== Memcheck, a memory error detector
==3111== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==3111== Using Valgrind-3.15.0 and LibVEX; rerun with -h for copyright info
==3111== Command: ./yaser
==3111== 
==3111== Syscall param openat(filename) points to uninitialised byte(s)
==3111==    at 0x496AEAB: open (open64.c:48)
==3111==    by 0x48ED195: _IO_file_open (fileops.c:189)
==3111==    by 0x48ED459: _IO_file_fopen@@GLIBC_2.2.5 (fileops.c:281)
==3111==    by 0x48DFB0D: __fopen_internal (iofopen.c:75)
==3111==    by 0x48DFB0D: fopen@@GLIBC_2.2.5 (iofopen.c:86)
==3111==    by 0x10D7C3: dimacs_parse_file (dimacs_parser.c:81)
==3111==    by 0x10D1EC: main (main.c:49)
==3111==  Address 0x4a4f040 is 0 bytes inside a block of size 128 alloc'd
==3111==    at 0x483B7F3: malloc (in /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so)
==3111==    by 0x10D11B: main (main.c:36)
==3111== 
[12:58:24][YASER - [31mERROR[0m][dimacs_parser.c]: [31mNo such file or directory[0m
==3111== 
==3111== HEAP SUMMARY:
==3111==     in use at exit: 128 bytes in 1 blocks
==3111==   total heap usage: 11 allocs, 10 frees, 13,473 bytes allocated
==3111== 
==3111== LEAK SUMMARY:
==3111==    definitely lost: 0 bytes in 0 blocks
==3111==    indirectly lost: 0 bytes in 0 blocks
==3111==      possibly lost: 0 bytes in 0 blocks
==3111==    still reachable: 128 bytes in 1 blocks
==3111==         suppressed: 0 bytes in 0 blocks
==3111== Reachable blocks (those to which a pointer was found) are not shown.
==3111== To see them, rerun with: --leak-check=full --show-leak-kinds=all
==3111== 
==3111== Use --track-origins=yes to see where uninitialised values come from
==3111== For lists of detected and suppressed errors, rerun with: -s
==3111== ERROR SUMMARY: 1 errors from 1 contexts (suppressed: 0 from 0)
